# This is a basic workflow to help you get started with Actions 

name: MANUAL_DEPLOY

# Controls when the action will run.
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        testLevel:
          description: 'Test Run'
          required: true
          default: 'RunLocalTests' 
          type: choice
          options:
          - RunLocalTests
          - NoTestRun
        targetOrg:
          description: 'Target Org'
          required: true
          default: 'KIA_KIN_SPRINTST' 
          type: choice
          options:
          - SPRINTST
          - TEST
          - MIG
          - LOADTEST
        deployType:
          description: 'Deployment Type'
          required: true
          default: 'Validation' 
          type: choice
          options:
          - Validation
          - Deployment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: jorgesolebur/salesforce-ci:7.150

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Replaces placeholders in the metadata with the value from the property file for the right environment
      - name: Replaces placeholder in the files with the property files from the right environment
        if: ${{ github.event.inputs.targetOrg == 'SPRINTST' }} 
        run: |
          ant prepare -Dsf.env=QA
      - name: Replaces placeholder in the files with the property files from the right environment
        if: ${{ github.event.inputs.targetOrg == 'TEST' }} 
        run: |
          ant prepare -Dsf.env=TEST
      - name: Replaces placeholder in the files with the property files from the right environment
        if: ${{ github.event.inputs.targetOrg == 'MIG' }} 
        run: |
          ant prepare -Dsf.env=MIG
      - name: Replaces placeholder in the files with the property files from the right environment
        if: ${{ github.event.inputs.targetOrg == 'LOADTEST' }} 
        run: |
          ant prepare -Dsf.env=LOADTEST

      #Authentication to Target org
      - name: Write the token into a file and authenticate to Target Org
        if: ${{ github.event.inputs.targetOrg == 'SPRINTST' }} 
        run: |
          echo ${{ secrets.SPRINTST }} > token.txt         
          sfdx force:auth:sfdxurl:store -f token.txt -a myOrg -s
      - name: Write the token into a file and authenticate to Target Org
        if: ${{ github.event.inputs.targetOrg == 'TEST' }} 
        run: |
          echo ${{ secrets.TEST }} > token.txt         
          sfdx force:auth:sfdxurl:store -f token.txt -a myOrg -s
      - name: Write the token into a file and authenticate to Target Org
        if: ${{ github.event.inputs.targetOrg == 'MIG' }} 
        run: |
          echo ${{ secrets.MIG }} > token.txt         
          sfdx force:auth:sfdxurl:store -f token.txt -a myOrg -s
      - name: Write the token into a file and authenticate to Target Org
        if: ${{ github.event.inputs.targetOrg == 'LOADTEST' }} 
        run: |
          echo ${{ secrets.LOADTEST }} > token.txt         
          sfdx force:auth:sfdxurl:store -f token.txt -a myOrg -s

      - name: Validate source code
        if: ${{ github.event.inputs.deployType == 'Validation' }} 
        run: 'sfdx force:source:deploy -p force-app/main/default -l ${{ github.event.inputs.testLevel }} -w 100 -u myOrg -c'
      - name: Deploy source code
        if: ${{ github.event.inputs.deployType == 'Deployment' }} 
        run: 'sfdx force:source:deploy -p force-app/main/default -l ${{ github.event.inputs.testLevel }} -w 100 -u myOrg'
